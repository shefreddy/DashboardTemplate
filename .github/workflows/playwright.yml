name: Playwright Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g pnpm && pnpm install
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
    - name: Run Playwright tests
      run: pnpm exec playwright test
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image with tag
      run: docker build . --file Dockerfile --tag playwright-image:${{github.run_number}}
    - name: Build latest
      run: docker build . --file Dockerfile --tag playwright-image
    - name: Login to Docker hub
      run: docker login -u ${{secrets.REGISTRY_USERNAME}} -p ${{secrets.REGISTRY_PASS}}
    - name: Tag image
      run: docker tag playwright-image:${{github.run_number}} ${{secrets.REGISTRY_USERNAME}}/playwright-image:${{github.run_number}}
    - name: Push image
      run: docker push ${{secrets.REGISTRY_USERNAME}}/playwright-image:${{github.run_number}}

  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: SSH to server
        uses: appleboy/ssh-action@v1.0.3
        with:
         host: ${{vars.HOSTIP}}
         username: ${{vars.USERNAME}}
         key: ${{secrets.SSHKEY}}
         script: |
            docker stop dash || echo ""
            docker rm dash || echo ""
            docker run -d --name dash -p 8080:80 ${{secrets.REGISTRY_USERNAME}}/playwright-image:${{github.run_number}}


